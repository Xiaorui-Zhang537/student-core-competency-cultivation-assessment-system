<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noncore.assessment.mapper.LessonMapper">

    <resultMap id="LessonResultMap" type="com.noncore.assessment.entity.Lesson">
        <id column="id" property="id"/>
        <result column="course_id" property="courseId"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="content" property="content"/>
        <result column="video_url" property="videoUrl"/>
        <result column="allow_scrubbing" property="allowScrubbing"/>
        <result column="allow_speed_change" property="allowSpeedChange"/>
        <result column="duration" property="duration"/>
        <result column="order_index" property="orderIndex"/>
        <result column="is_free" property="isFree"/>
        <result column="chapter_id" property="chapterId"/>
        <result column="weight" property="weight"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, course_id, title, description, content, video_url, allow_scrubbing, allow_speed_change, duration, order_index, is_free, chapter_id, weight, created_at, updated_at, deleted
    </sql>

    <!-- 插入课时 -->
    <insert id="insertLesson" parameterType="com.noncore.assessment.entity.Lesson" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO lessons (
            course_id, title, description, content, video_url, allow_scrubbing, allow_speed_change, duration, order_index, is_free, chapter_id, weight, created_at, updated_at, deleted
        ) VALUES (
                     #{courseId}, #{title}, #{description}, #{content}, #{videoUrl}, #{allowScrubbing}, #{allowSpeedChange}, #{duration}, #{orderIndex}, #{isFree}, #{chapterId}, COALESCE(#{weight}, 1.00), #{createdAt}, #{updatedAt}, #{deleted}
                 )
    </insert>

    <!-- 根据ID查询课时 -->
    <select id="selectLessonById" parameterType="java.lang.Long" resultMap="LessonResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM lessons
        WHERE id = #{id} AND deleted = false
    </select>

    <!-- 根据课程ID查询课时列表 -->
    <select id="selectLessonsByCourseId" parameterType="java.lang.Long" resultMap="LessonResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
        ORDER BY order_index
    </select>

    <!-- 更新课时 -->
    <update id="updateLesson" parameterType="com.noncore.assessment.entity.Lesson">
        UPDATE lessons
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="content != null">content = #{content},</if>
            <if test="videoUrl != null">video_url = #{videoUrl},</if>
            <if test="allowScrubbing != null">allow_scrubbing = #{allowScrubbing},</if>
            <if test="allowSpeedChange != null">allow_speed_change = #{allowSpeedChange},</if>
            <if test="duration != null">duration = #{duration},</if>
            <if test="orderIndex != null">order_index = #{orderIndex},</if>
            <if test="isFree != null">is_free = #{isFree},</if>
            <if test="chapterId != null">chapter_id = #{chapterId},</if>
            <if test="weight != null">weight = #{weight},</if>
            updated_at = #{updatedAt}
        </set>
        WHERE id = #{id} AND deleted = false
    </update>

    <!-- 删除课时（软删除） -->
    <update id="deleteLesson" parameterType="java.lang.Long">
        UPDATE lessons SET deleted = true, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 统计课程课时数 -->
    <select id="countLessonsByCourse" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
    </select>

    <!-- 获取课程总时长 -->
    <select id="getTotalDurationByCourse" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COALESCE(SUM(duration), 0)
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
    </select>

    <!-- 更新课时排序（仅根据 id 设置新的 order_index） -->
    <update id="updateLessonOrder">
        UPDATE lessons
        SET order_index = #{newOrder}, updated_at = NOW()
        WHERE id = #{id} AND deleted = false
    </update>

</mapper>