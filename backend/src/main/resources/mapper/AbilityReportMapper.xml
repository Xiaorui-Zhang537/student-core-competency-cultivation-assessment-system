<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noncore.assessment.mapper.AbilityReportMapper">

    <!-- 结果映射 -->
    <resultMap id="AbilityReportResultMap" type="com.noncore.assessment.entity.AbilityReport">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="report_type" property="reportType"/>
        <result column="title" property="title"/>
        <result column="overall_score" property="overallScore"/>
        <result column="report_period_start" property="reportPeriodStart"/>
        <result column="report_period_end" property="reportPeriodEnd"/>
        <result column="dimension_scores" property="dimensionScores"/>
        <result column="trends_analysis" property="trendsAnalysis"/>
        <result column="achievements" property="achievements"/>
        <result column="improvement_areas" property="improvementAreas"/>
        <result column="recommendations" property="recommendations"/>
        <result column="ai_history_id" property="aiHistoryId"/>
        <result column="generated_by" property="generatedBy"/>
        <result column="is_published" property="isPublished"/>
        <result column="created_at" property="createdAt"/>
        <result column="published_at" property="publishedAt"/>
        <!-- 冗余字段 -->
        <result column="student_name" property="studentName"/>
        <result column="student_number" property="studentNumber"/>
    </resultMap>

    <sql id="abilityReportColumns">
        r.id, r.student_id, r.report_type, r.title, r.overall_score,
        r.report_period_start, r.report_period_end, r.dimension_scores, r.trends_analysis,
        r.achievements, r.improvement_areas, r.recommendations, r.ai_history_id,
        r.generated_by, r.is_published, r.created_at, r.published_at,
        r.course_id, r.assignment_id, r.submission_id
    </sql>
    <sql id="abilityReportDetailColumns">
        <include refid="abilityReportColumns"/>,
        COALESCE(u.nickname, u.username) AS student_name,
        u.student_number AS student_number
    </sql>

    <!-- 插入能力报告 -->
    <insert id="insertReport" parameterType="com.noncore.assessment.entity.AbilityReport" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ability_reports (
            student_id, report_type, title, overall_score,
            report_period_start, report_period_end, dimension_scores, trends_analysis,
            achievements, improvement_areas, recommendations, ai_history_id,
            generated_by, is_published, created_at, published_at,
            course_id, assignment_id, submission_id
        ) VALUES (
                     #{studentId}, #{reportType}, #{title}, #{overallScore},
                     #{reportPeriodStart}, #{reportPeriodEnd}, #{dimensionScores}, #{trendsAnalysis},
                     #{achievements}, #{improvementAreas}, #{recommendations}, #{aiHistoryId},
                     #{generatedBy}, #{isPublished}, NOW(), #{publishedAt},
                     #{courseId}, #{assignmentId}, #{submissionId}
                 )
    </insert>

    <!-- 根据ID查询能力报告 -->
    <select id="selectReportById" parameterType="long" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportDetailColumns"/>
        FROM ability_reports r
        LEFT JOIN users u ON r.student_id = u.id
        WHERE r.id = #{id}
    </select>

    <!-- 雷达统计：按课程/学生/作业筛选 AI 报告 -->
    <select id="selectReportsForRadar" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        <where>
            <if test="courseId != null">r.course_id = #{courseId}</if>
            <if test="studentId != null">AND r.student_id = #{studentId}</if>
            <if test="assignmentIds != null and assignmentIds.size > 0">
                AND r.assignment_id IN
                <foreach collection="assignmentIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="start != null and end != null">AND r.created_at BETWEEN #{start} AND #{end}</if>
            AND r.report_type = 'ai'
        </where>
        ORDER BY r.created_at DESC
    </select>

    <!-- 更新能力报告 -->
    <update id="updateReport" parameterType="com.noncore.assessment.entity.AbilityReport">
        UPDATE ability_reports
        <set>
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="reportType != null">report_type = #{reportType},</if>
            <if test="title != null">title = #{title},</if>
            <if test="overallScore != null">overall_score = #{overallScore},</if>
            <if test="reportPeriodStart != null">report_period_start = #{reportPeriodStart},</if>
            <if test="reportPeriodEnd != null">report_period_end = #{reportPeriodEnd},</if>
            <if test="dimensionScores != null">dimension_scores = #{dimensionScores},</if>
            <if test="trendsAnalysis != null">trends_analysis = #{trendsAnalysis},</if>
            <if test="achievements != null">achievements = #{achievements},</if>
            <if test="improvementAreas != null">improvement_areas = #{improvementAreas},</if>
            <if test="recommendations != null">recommendations = #{recommendations},</if>
            <if test="aiHistoryId != null">ai_history_id = #{aiHistoryId},</if>
            <if test="generatedBy != null">generated_by = #{generatedBy},</if>
            <if test="isPublished != null">is_published = #{isPublished},</if>
            <if test="publishedAt != null">published_at = #{publishedAt},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 按作业/提交获取最新AI报告 -->
    <select id="selectLatestReportByContext" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        WHERE r.student_id = #{studentId}
        <if test="submissionId != null">AND r.submission_id = #{submissionId}</if>
        <if test="submissionId == null and assignmentId != null">AND r.assignment_id = #{assignmentId}</if>
        <if test="submissionId == null and assignmentId == null and courseId != null">AND r.course_id = #{courseId}</if>
        AND r.report_type = 'ai'
        ORDER BY r.created_at DESC
        LIMIT 1
    </select>

    <!-- 删除能力报告 -->
    <delete id="deleteReport" parameterType="long">
        DELETE FROM ability_reports WHERE id = #{id}
    </delete>

    <!-- 根据学生ID查询报告 -->
    <select id="selectReportsByStudentId" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        WHERE r.student_id = #{studentId}
        ORDER BY r.report_period_end DESC
    </select>

    <!-- 分页查询能力报告 -->
    <select id="selectReportsWithPagination" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        <where>
            <if test="studentId != null">r.student_id = #{studentId}</if>
            <if test="reportType != null and reportType != ''">AND r.report_type = #{reportType}</if>
            <if test="isPublished != null">AND r.is_published = #{isPublished}</if>
        </where>
        ORDER BY r.report_period_end DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 统计能力报告数量 -->
    <select id="countReports" resultType="integer">
        SELECT COUNT(1)
        FROM ability_reports r
        <where>
            <if test="studentId != null">r.student_id = #{studentId}</if>
            <if test="reportType != null and reportType != ''">AND r.report_type = #{reportType}</if>
            <if test="isPublished != null">AND r.is_published = #{isPublished}</if>
        </where>
    </select>

    <!-- 获取学生最新的报告 -->
    <select id="selectLatestReportByStudent" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        WHERE r.student_id = #{studentId}
        ORDER BY r.report_period_end DESC
        LIMIT 1
    </select>

    <!-- 根据类型和时间范围查报告 -->
    <select id="selectReportsByTypeAndPeriod" resultMap="AbilityReportResultMap">
        <![CDATA[
    SELECT
  ]]>
        <include refid="abilityReportColumns"/>
        <![CDATA[
        , COALESCE(u.nickname, u.username) AS student_name,
      u.student_number AS student_number
    FROM ability_reports r
    LEFT JOIN users u ON r.student_id = u.id
    WHERE r.student_id = #{studentId}
      AND r.report_type = #{reportType}
      AND r.report_period_start &gt;= #{periodStart}
      AND r.report_period_end &lt;= #{periodEnd}
    ORDER BY r.report_period_end DESC
  ]]>
    </select>

    <!-- 检查报告是否存在 -->
    <select id="existsByStudentAndPeriod" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM ability_reports r
        WHERE r.student_id = #{studentId}
          AND r.report_type = #{reportType}
          AND r.report_period_start = #{periodStart}
          AND r.report_period_end = #{periodEnd}
    </select>

    <!-- 发布报告 -->
    <update id="publishReport" parameterType="long">
        UPDATE ability_reports
        SET is_published = true, published_at = NOW(), updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 取消发布报告 -->
    <update id="unpublishReport" parameterType="long">
        UPDATE ability_reports
        SET is_published = false, published_at = NULL, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量删除旧报告 -->
    <delete id="deleteOldReports" parameterType="java.time.LocalDate">
        DELETE FROM ability_reports
        WHERE report_period_end &lt; #{beforeDate}
    </delete>

    <!-- 获取报告统计信息 -->
    <select id="getReportStats" resultType="map">
        SELECT COUNT(*)                        AS totalReports,
               SUM(IF(is_published = 1, 1, 0)) AS publishedReports,
               MAX(overall_score)              AS topScore,
               MIN(overall_score)              AS minScore,
               AVG(overall_score)              AS avgScore
        FROM ability_reports
        WHERE student_id = #{studentId}
    </select>

    <!-- 按类型统计报告数量 -->
    <select id="countReportsByType" resultType="map">
        SELECT report_type, COUNT(*) AS count
        FROM ability_reports
        WHERE student_id = #{studentId}
        GROUP BY report_type
    </select>

    <!-- 获取最高分报告 -->
    <select id="selectTopScoreReports" resultMap="AbilityReportResultMap">
        SELECT <include refid="abilityReportColumns"/>
        FROM ability_reports r
        WHERE r.student_id = #{studentId}
        ORDER BY r.overall_score DESC
        LIMIT #{limit}
    </select>

    <!-- 查询需要生成的报告 -->
    <select id="selectStudentsForReportGeneration" resultType="long">
        SELECT DISTINCT student_id
        FROM ability_reports
        WHERE report_type = #{reportType}
          AND (created_at &lt; #{lastGeneratedBefore} OR created_at IS NULL)
    </select>

</mapper>